@using GenericDotNetCoreAdmin.ViewModels
@model GenericDotNetCoreAdmin.ViewModels.GenericAdminEntityFormViewModel

@{
    Layout = null;
}

<form asp-action="@ViewContext.RouteData.Values["action"]" style="display: flex; flex-direction: column">
    @foreach (var formControl in Model.FormControls)
    {
        @Html.Label(formControl.Name, formControl.Name)
        if (formControl is SimpleFormControlViewModel simpleFormControlViewModel)
        {
            <formInput
                for-type="@simpleFormControlViewModel.Type"
                for-name="@simpleFormControlViewModel.Name"
                with-value="@simpleFormControlViewModel.Value"
                readonly="@simpleFormControlViewModel.IsReadOnly"
                class="form-control">
            </formInput>
        }
        else if (formControl is ComplexFormControlViewModel complexFormControlViewModel)
        {
            <formInput
                for-type="@complexFormControlViewModel.Type"
                for-name="@complexFormControlViewModel.Name"
                with-values="@complexFormControlViewModel.Values"
                with-keys="@complexFormControlViewModel.Keys"
                readonly="@complexFormControlViewModel.IsReadOnly"
                class="form-control">
            </formInput>
        }
    }
    <button class="btn btn-dark">@Model.Action</button>
</form>